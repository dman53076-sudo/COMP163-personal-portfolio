# Personal Information Storage
full_name = "Daniel Crandle"
student_email = "dcrandle@ncat.edu"
hometown = "Greenville, NC"
graduation_semester = "Spring 2028"
major = "Computer Science"
# Academic Data Organization
current_courses_list = ["COMP 163", "MATH 150", "ENG 101", "HIS 105"]
completed_courses_list = ["Biology", "Chemistry", "Calculus", "Spanish 2", "World History"]
credit_hours_list = [3, 3, 3, 3]
gpa_history_list = [3.2, 3.6, 3.4, 3.7]
# Contact Information Storage
emergency_contact_tuple = ("Mom", "Hannah Smith", "704-555-0199")
home_address_tuple = ("456 Oak Street", "Charlotte", "NC", "28202")
instagram_info_tuple = ("Instagram", "@jordan_codes", 312)
twitter_info_tuple = ("Twitter", "@jordandev", 127)
birthday_tuple = ("Birthday", 5, 22, 2006)
# Interest Tracking
current_skills_set = {"Python basics", "HTML", "Problem solving", "Time management", "Photography"}
skills_to_learn_set = {"JavaScript", "Data structures", "Git", "Web design", "Public speaking"}
career_interests_set = {"Software development", "Web development", "Data science", "Game development"}
hobbies_set = {"Gaming", "Photography", "Reading", "Soccer", "Music"}
entertainment_backlog_set = {"One Piece", "Barry", "Life", "Incantation", "Memento"}
# Organizational Mapping
course_credits_dictionary = {
    "COMP 163": 3,
    "MATH 150": 3,
    "ENG 101": 3,
    "HIS 105": 3
}
course_professors_dictionary = {
    "COMP 163": "Prof. Rhodes",
    "MATH 150": "Dr. Lee",
    "ENG 101": "Dr. Martinez",
    "HIS 105": "Dr. Brown"
}
course_rooms_dictionary = {
    "COMP 163": "M-Eric 300",
    "MATH 150": "Marteena 201",
    "ENG 101": "Crosby 121",
    "HIS 105": "Crosby 210"
}
monthly_budget_dictionary = {
    "Food": 450,
    "Entertainment": 200,
    "Books": 125,
    "Transportation": 100
}
study_hours_per_subject_dictionary = {
    "Programming": 10,
    "Math": 8,
    "English": 4,
    "History": 3
}
contact_directory_dictionary = {
    "Mom": "704-555-0199",
    "Roommate": "336-555-7821",
    "Academic Advisor": "336-334-5000"
}
# Required Calculations
total_credit_hours = sum(credit_hours_list)
cumulative_gpa = round(sum(gpa_history_list) / len(gpa_history_list),2)
count_of_completed_courses = len(completed_courses_list)
total_weekly_study_hours = (study_hours_per_subject_dictionary["Programming"] + study_hours_per_subject_dictionary["Math"] + study_hours_per_subject_dictionary["English"] + study_hours_per_subject_dictionary["History"])
academic_load = total_credit_hours + (study_hours_per_subject_dictionary["Programming"] + study_hours_per_subject_dictionary["Math"] + study_hours_per_subject_dictionary["English"] + study_hours_per_subject_dictionary["History"])
monthly_budget_total = monthly_budget_dictionary["Food"] + monthly_budget_dictionary["Entertainment"] + monthly_budget_dictionary["Books"] + monthly_budget_dictionary["Transportation"]
daily_food_budget = round(monthly_budget_dictionary["Food"] / 30, 2)
annual_budget_projection = monthly_budget_total * 12
study_cost_per_hour = round(monthly_budget_dictionary["Books"] / total_weekly_study_hours, 2)
# Analytics Calculations
total_social_media_followers = instagram_info_tuple[2] + twitter_info_tuple[2]
skills_count_comparison = len(current_skills_set) - len(skills_to_learn_set)
contact_directory_size_analysis = len(contact_directory_dictionary)
entertainment_backlog_management_count = len(entertainment_backlog_set)

print("================================================================")
print("              PERSONAL ACADEMIC & LIFE PORTFOLIO")
print("================================================================")
print(f"Student: {full_name} | Email: {student_email}")
print(f"From: {hometown} | Graduating: {graduation_semester}")
print(f"Major: {major}")
print("\n=== ACADEMIC PROFILE ===")
print(f"Current Semester: {total_credit_hours} credits across {len(current_courses_list)} courses")
print(f"Cumulative GPA: {cumulative_gpa}")
print(f"Weekly Study Time: {total_weekly_study_hours} hours")
print(f"Academic Investment: $5.0 per study hour")
print("\nCurrent Courses:")
print(f"COMP 163 - {course_credits_dictionary['COMP 163']} credits - {course_professors_dictionary['COMP 163']} - {course_rooms_dictionary['COMP 163']}")
print(f"MATH 150 - {course_credits_dictionary['MATH 150']} credits - {course_professors_dictionary['MATH 150']} - {course_rooms_dictionary['MATH 150']}")
print(f"ENG 101 - {course_credits_dictionary['ENG 101']} credits - {course_professors_dictionary['ENG 101']} - {course_rooms_dictionary['ENG 101']}")
print(f"HIS 105 - {course_credits_dictionary['HIS 105']} credits - {course_professors_dictionary['HIS 105']} - {course_rooms_dictionary['HIS 105']}")
print("\n=== PERSONAL DEVELOPMENT ===")
print(f"Current Skills: {current_skills_set}")
print(f"Learning Goals: {skills_to_learn_set}")
print(f"Career Interests: {career_interests_set}")
print(f"Skills Currently Have: {len(current_skills_set)}")
print(f"Skills Want to Learn: {len(skills_to_learn_set)}")
print("\n=== FINANCIAL OVERVIEW ===")
print(f"Monthly Budget: ${monthly_budget_total}")
print(f"Food: ${monthly_budget_dictionary['Food']} (${daily_food_budget}/day)")
print(f"Entertainment: ${monthly_budget_dictionary['Entertainment']}")
print(f"Books: ${monthly_budget_dictionary['Books']}")
print(f"Transportation: ${monthly_budget_dictionary['Transportation']}")
print(f"Annual Projection: ${annual_budget_projection}")
print("\n=== CONNECTIONS & CONTACTS ===")
print(f"Emergency Contact: {emergency_contact_tuple[1]} - ({emergency_contact_tuple[0]}) - {emergency_contact_tuple[2]}")
print(f"Home Address: {home_address_tuple[0]}, {home_address_tuple[1]}, {home_address_tuple[2]} {home_address_tuple[3]}")
print(f"Social Media Presence: {total_social_media_followers} followers across 2 platforms")
print(f"Key Contacts: {contact_directory_size_analysis} people in directory")
print("\n=== LIFE STATISTICS ===")
print(f"Total Courses Completed: {count_of_completed_courses}")
print(f"Current Academic Load: {academic_load} weekly commitments")
print(f"Entertainment Backlog: {entertainment_backlog_management_count} items")
print(f"Current Hobbies: {len(hobbies_set)} activities")
print("================================================================")
